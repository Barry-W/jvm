第八章 虚拟机字节码执行引擎


概述：
  执行引擎为Java虚拟机核心组成部分。虚拟机概念相对于物理机而言，两种都有代码执行能力，区别：物理机执行引擎建立在处理器、硬件、指令集和操作系统层面上；
  虚拟机执行引擎由自己实现。可自行制定指令集与执行引擎的结构体系，并且能执行不被硬件直接支持的指令格式。
  
  
运行时栈帧结构：
  栈帧：用于支持虚拟机进行方法调用和方法执行的数据结构。栈帧存储了方法的局部变量表、操作数栈、动态链接和方法返回地址等信息。每个方法从调用开始到执行完成
  对应栈帧在虚拟机中入栈出栈过程。
  
局部变量表：
  一组变量值存储空间，存放方法参数和内部局部变量。
  
操作数栈：
  特点：后入先出。同局部变量表，操作数栈最大深度也在编译中写入code属性的max_stacks数据项之中。
方法地址返回：
  返回方式：
    1.执行引擎遇到任意一个方法返回的字节码指令，返回值具体视情况而定。表示正常完成出口
    2.方法执行遇到异常且方法体中未处理。
    注：方法返回需在栈帧中保存些许信息，用以恢复上层状态。
附加信息：
  虚拟机规范中允许增加规范中没有描述的信息到栈帧中。如与调试相关信息。
  
方法调用：
  方法调用不等于方法执行，该阶段任务是确定被调用方法版本，未涉及具体运行过程。
  
解析：
  类加载解析阶段，将一部分符号转为直接引用，前提：方法在程序运行前有一个可确定的调用版本，并且该方法的调用版本在运行期不可改变。即：调用目标在程序代码
  写好、编译器进行编译就必须确定。







