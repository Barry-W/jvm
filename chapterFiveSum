第五章  调优案例分析与实战

    5.1 概述
        案例分析记录作者遇到并处理过的性能问题及来源于网上有特色和代表性的案例总结。
    
    5.2 案例分析
    
      5.2.1 高性能硬件上的程序部署策略
        现象：15万pv/天左右的在线文档类型网站更换硬件系统，新的硬件为4个CPU、16G物理内存，系统64位CentOS5.4，Resin为web服务器，JDK为64位1.5，设置
        -Xmx和-xms参数固定在12GB；
        
        结果：不理想，不定期出现长时间没有响应；
        
        分析：无响应由GC导致。虚拟机运行在Server模式，默认使用吞吐量优先收集器，回收12GB堆，Full GC耗时长达14s。由于程序设计，文档从磁盘中提取到内存，
        导致文档序列号产生大对象，许多大对象进入老年代，没有在Minor GC中回收。
        
        解决方式：
            1.通过64位JDK来使用大内存；
            2.使用若干个32位虚拟机建立逻辑群来利用硬件资源。
        
      
      5.2.2 集群间同步导致的内存溢出
      
      5.2.3 堆外内存导致的溢出错误
      
      5.2.4 外部命令导致系统缓慢
      
      5.2.5 服务器JVM进程崩溃
      
    5.3 实战：Eclipse运行速度调优
    
      5.3.1 调优前的程序运行状态
      
      5.3.2 升级JDK1.6的性能变化及兼容问题
      
      5.3.3 编译时间和类加载时间的优化
      
      5.3.4 调整内存设置控制垃圾收集频率
      
      5.3.5 选择收集器降低延迟
      
      
    5.4 本章小结
      
      
      



     





















