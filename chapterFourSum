第四章 虚拟机性能监控与故障处理工具

     4.1 概述
        系统定位问题，知识、经验是关键基础，数据是依据，工具是运用知识处理数据的手段。数据包括：运行日志、异常堆栈、GC日志、线程快照、堆转储快照等。
        适当使用虚拟机监控和分析工具可以大块分析数据和定位解决问题的速度，但也注意，工具永远都是知识技能的一层包装。
     
     
     4.2 JDK的命令行工具
        JDK的bin目录中有“java.exe”和“javac.exe”两个命令行工具。
     
     
      4.2.1 jps：虚拟机进程状况工具
          JDK很多小工具名字都参考了Unix命令的命名方式，jps（JVM Process Status Tool）
          作用：可以列出正在运行的虚拟机进程，并显示虚拟机的执行主类的名称，以及这些进程的本地虚拟机的唯一ID（LVMID，Local Virtual Machine Identifer）
          多个虚拟机进程，无法根据进程名称定位，只能依赖jps命令显示主类的功能来区分。
     
      4.2.2 jstat：虚拟机统计信息监视工具
          jstat（JVM Statistics Monitoring Tool）是用于监视虚拟机各种运行状态信息的命令行工具。
          可以显示本地或远程虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据。
      
      4.2.3 jinfo：Java配置信息工具
          jinfo的作用是实时查看和调整虚拟机的各项参数，使用jps命令的-v可以查看虚拟机启动时显示指定的参数列表。jinfo中-flag选项可以查未被显示指定的
          参数的系统默认值。
          
          jinfo命令格式：
          jinfo [ option ] pid
          执行样例：查询CMSSInitiatingOccupancyFraction参数值。
          C:\>info -flag CMSInitiatingOccupancyFraction 1444
          -XX:CMSInitiatingOccupancyFraction=85
          
      4.2.4 jmap:Java内存映像工具
          jmap命令用于生成堆转储快照（又称heapdump或dump文件），另-XX:+HeapDumpOnOutOfMemoryError参数，可以让虚拟机在OOM异常出现之后自动生成dump
          文件，通过-XX:+HeapDumpOnCtrlBreak参数可以使用[Ctrl]+[Break]键让虚拟机生成dump文件。
          jmap不仅可以获取dump文件，还可以查询finalize执行队列，java堆和永久代的详细信息，如空间使用率、当前作用的是哪种收集器等。
          jmap命令格式：
          jamp [ option ] vmid
          
          
      
      4.2.5 jhat：虚拟机堆转储快照分析工具
          Sun JDK提供jhat与jmap搭配使用，用于分析jmap生成的堆转储快照。jhat内置了微型HTTP/HTML服务器，生成dump文件可以直接在浏览器中查看。
          
      4.2.6 jstack：Java堆跟踪工具
          jstack用于生产虚拟机当前时刻的线程快照。线程快照，即当前虚拟机每条线程正在执行的方法堆栈的集合，来定位线程出现长时间停顿的原因，如线程死锁、
          死循环、请求外部资源导致长时间等待等。
          jstack 命令格式：
          jstack [ option ] vmid
          
          
     4.3 JDK可视化工具
     
      4.3.1 JConsole: Java监视与管理控制台
          JConsole是在JDK1.5时期提供的虚拟机监控工具。
          1.启动：
               JConsole是一款基于JMX的可视化监视和管理工具，双击其中进程即可以监控。
          2.内存监控：
               内存页签相当于可视化jstat命令，用于监视收集器管理的虚拟机内存的变化趋势。
               运行设置虚拟机参数：-Xms100m -Xmx100m -XX：+UseSerialGC
               运行代码：
               
               思考：
                    1.虚拟机启动参数只限制了Java堆为100MB，没有指定-Xmn参数，能否从监控中估计新生代有多大？
                     注：Eden与Survivor空间默认比例默认为8：1，即可计算出
                    2.执行了System.gc（）之后，老年代并没有回收，怎样回收？
                     注：System.gc()在方法中，对应局部变量仍在作用域内，移出即可。
          
      
      4.3.2 VisualIVM:多合一故障处理工具
          VisualVM是目前为止，随JDK发布的功能最强大的运行监视和故障处理程序。
               1.VisualVM兼容范围与插件安装；
               2.生成和浏览堆转储快照，生成dump两种方式：
               3.分析性能
               4.BTrace动态日志跟踪
               
     4.4 小结
          除了JDK自带工具外，还有许多处理故障工具，非Hotspot，需要对应工具，如：
          IBM：Support Assisant、Heap Analyzer、Javacore Analyzer
          HP：HPjmeter、HPjtune
          Eclipse：Memory Analyzer Tool
          
          
          
