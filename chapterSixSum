第六章 类文件结构


  无关性基石
    不同平台虚拟机都统一使用试用程序存储格式--字节码。字节码是构成平台无关性的基石。

  Class类文件结构
  Class文件是一组以8位字节为基础的二进制流，各个数据项目严格按照顺序紧凑地排列在Class文件之中，中间没有任何分隔符，这使得整个Class文件中存储的内容几乎
  全都是程序运行的必要数据，没有空隙存在。当遇到需要占用8位字节以上空间数据项时，则会按照高位在前的方式分割成若干个8位字节进行存储。
  
  据规定：Class文件采用类似C语言结构体的伪结构存储。只有两种数据类型：无符号数和表。
  
  无符号数：属于基本数据类型，以u1，u2，u4，u8来分别代表1个字节，2个字节，4个字节和8个字节的无符号数。无符号数可以用来描述数字、索引引用、数量值、或者、
  按照UTF-8编码构成字符串值。
  表：由多个无符号数或者其他表作为数据项构成的复合型数据类型，所有表都习惯性以“_info”结尾。表用于描述有层次关系的复合结构的数据，整个Class文件本质上就是
  一张表。
  
  魔数与Class文件的版本
  每个Class文件的头四个字节称为魔数，它的唯一作用是用于确定该文件是否能被虚拟机接受的Class文件。使用魔数而不是拓展名来进行识别，主要是基于安全考虑。Class
  文件的魔数值为：0xCAFEBABE，这个魔数值在Java还被称为Oak语言时已经确定。
  紧接着魔数四个字节存储的是Class文件的版本号：第5和第6个字节是次版本号，第7和第8是主版本号。java的版本号是从45开始的，JDK1.1之后每个JDK大版本发布，主
  版本号向上加1.

  常量池
  常量池是Class文件结构中与其他项目关联最多的数据类型，也是占用Class文件空间最大的数据项目之一，同时它还是在Class文件夹中第一个出现的表类型数据项目。
  常量池数量不固定，入口放置一项u2类型数据，代表常量池计数是从1而不是0开始的。
  常量池主要存放两大类常量：字面量和符号引用。字面量较接近Java语言层面的常量概念，如文本字符串、被声明为final的常量值等。
  符号属于编译原理方面概念，包括三类常量：
  1.类和接口的全限定名
  2.字段的名称和描述
  3.方法的名称和描述符

  类索引、父类索引与接口索引集合
  类索引和父类索引都是一个u2类型的数据，而接口索引集合是一组u2类型的数据的集合，Class文件中由这三项数据来确定这个类的继承关系。类索引用于确定这个类的
  全限定名，父类索引用于确定这个类的父类全限定名。java禁止多继承，父类索引只有一个。接口索引集合就用来描述这个类实现了哪个接口。
  类索引、父类索引和接口索引都按顺序排列在访问标志之后，类索引和父类索引引用两个u2类型的索引值表示，他们各自指向一个类型为CONSTANT_Class_info的类描
  述符常量，通过CONSTANT_Class_info类型的常量中索引值可以找到定义在CONSTANT_Utf8_info类型的常量中的全限定名字字符串。


  字段表集合
  字段表用于描述接口或类中声明的变量。字段包括了类级变量或实例级变量，但不包括在方法内部声明的变量。描述一个字段包括信息：作用域、实例变量或类变量、
  可变性、并发可见性、可否序列化、字段数据类型。
  字段修饰符放在access_flags项目中。
  跟随access_flags标志的是两项索引值：name_index和descriptor_index，分别表示字段的简单名称及字段和方法的描述符。
  
  属性表集合
    1.code属性
    2.Exceptions属性
    3.LineNumberTable属性
    4.LocalVariableTable属性
    5.SourceFile属性
    6.ConstantValue属性
    7.InnerClasses属性
    8.Deprecated及Synthetic属性
    
    
  













